# ############################################################################
# Model: RNNLM of E2E ASR
# Tokens: unigram
# losses: NLL
# Training: mTEDx
# Authors:  Ju-Chieh Chou 2020, Jianyuan Zhong 2021, Mohamed Anwar 2022
# ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !PLACEHOLDER
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
# The data_folder is needed because we train the LM on the training
# transcriptions of original mTEDx as well.
data_folder: !PLACEHOLDER
langs:
   - fr

# Tokenizer model
tokenizer_file: !PLACEHOLDER

# Training parameters
number_of_epochs: 20
batch_size: 512
lr: 0.001
accu_steps: 1 # Gradient accumulation to simulate large batch training
# ckpt_interval_minutes: 15 # save checkpoint every N min

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>
   shuffle: True

valid_dataloader_opts:
   batch_size: 16

test_dataloader_opts:
   batch_size: 16

# Model parameters
emb_size: 128
activation: !name:torch.nn.LeakyReLU
dropout: 0.5
rnn_layers: 4
hidden_size: 512
dnn_blocks: 1
dnn_neurons: 256

# Outputs
output_neurons: 1000 # index(blank/eos/bos) = 0
# blank_index: 0
bos_index: 1 #depends on the tokenizer
eos_index: 2 #depends on the tokenizer

# Functions (RNN cell is LSTM by default)
model: !new:speechbrain.lobes.models.RNNLM.RNNLM
   output_neurons: !ref <output_neurons>
   embedding_dim: !ref <emb_size>
   activation: !ref <activation>
   dropout: !ref <dropout>
   rnn_layers: !ref <rnn_layers>
   rnn_neurons: !ref <hidden_size>
   dnn_blocks: !ref <dnn_blocks>
   dnn_neurons: !ref <dnn_neurons>

modules:
   model: !ref <model>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      model: !ref <model>
      scheduler: !ref <lr_annealing>
      counter: !ref <epoch_counter>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

optimizer: !name:torch.optim.Adam
   lr: !ref <lr>
   betas: (0.9, 0.98)
   eps: 0.000000001

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

compute_cost: !name:speechbrain.nnet.losses.nll_loss

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

tokenizer: !new:sentencepiece.SentencePieceProcessor

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <save_folder>
   loadables:
      tokenizer: !ref <tokenizer>
   paths:
      tokenizer: !ref <tokenizer_file>
